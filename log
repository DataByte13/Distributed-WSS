33 ino one! here the back info : {} ino one! here the back info target ctbn: {4: ['t3', 't4'], 5: [], 3: [], 1: []} ino one! here the back info :tartget track {'t3': [], 't4': []}
here list of tctbnnnnn: {4: ['t3', 't4'], 5: [], 3: [], 1: []}
tctbnnnnn 5
here list of tctbnnnnn: {4: ['t3', 't4'], 5: [], 3: [], 1: []}
tctbnnnnn 5
here domain : []
33 ino one! here the back info : {5: []} ino one! here the back info target ctbn: {4: ['t3', 't4'], 5: [], 3: [], 1: []} ino one! here the back info :tartget track {'t3': [], 't4': []}
here list of tctbnnnnn: {4: ['t3', 't4'], 5: [], 3: [], 1: []}
tctbnnnnn 3
here list of tctbnnnnn: {4: ['t3', 't4'], 5: [], 3: [], 1: []}
tctbnnnnn 3
here domain : []
33 ino one! here the back info : {5: [], 3: []} ino one! here the back info target ctbn: {4: ['t3', 't4'], 5: [], 3: [], 1: []} ino one! here the back info :tartget track {'t3': [], 't4': []}
here list of tctbnnnnn: {4: ['t3', 't4'], 5: [], 3: [], 1: []}
tctbnnnnn 1
here list of tctbnnnnn: {4: ['t3', 't4'], 5: [], 3: [], 1: []}
tctbnnnnn 1
here domain : []
33 ino one! here the back info : {5: [], 3: [], 1: []} ino one! here the back info target ctbn: {4: ['t3', 't4'], 5: [], 3: [], 1: []} ino one! here the back info :tartget track {'t3': [], 't4': []}
here list of tctbnnnnn: {4: ['t3', 't4'], 5: [], 3: [], 1: []}
tctbnnnnn 4
here targett tctbnnnnn t3
list in domain cho back {'t3': [], 't4': []}
trk back 4  i am tracker
con back 1
here targett tctbnnnnn t4
list in domain cho back {'t3': [], 't4': []}
trk back 4  i am tracker
con back 1
here list of tctbnnnnn: {4: ['t3', 't4'], 5: [], 3: [], 1: []}
tctbnnnnn 4
here targett tctbnnnnn t3
list in domain cho back {'t3': [], 't4': []}
trk back 4  i am tracker
con back 1
here targett tctbnnnnn t4
list in domain cho back {'t3': [], 't4': []}
trk back 4  i am tracker
con back 1
here domain : []
33 ino one! here the back info : {5: [], 3: [], 1: [], 4: []} ino one! here the back info target ctbn: {4: ['t3', 't4'], 5: [], 3: [], 1: []} ino one! here the back info :tartget track {'t3': [], 't4': []}
44 ino one! here the back info : {5: [], 3: [], 1: [], 4: []} ino one! here the back info target ctbn: {4: ['t3', 't4'], 5: [], 3: [], 1: []} ino one! here the back info :tartget track {'t3': [], 't4': []}
44 i want to return form bacck , here ass {5: [], 3: [], 1: [], 4: []}
{5: [], 3: [], 1: [], 4: ['t3', 't4']}
33 ino one! here the back info : {} ino one! here the back info target ctbn: {1: [], 2: [], 5: [], 4: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': []}
here list of tctbnnnnn: {1: [], 2: [], 5: [], 4: []}
tctbnnnnn 1
here list of tctbnnnnn: {1: [], 2: [], 5: [], 4: []}
tctbnnnnn 1
here domain : []
33 ino one! here the back info : {1: []} ino one! here the back info target ctbn: {1: [], 2: [], 5: [], 4: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': []}
here list of tctbnnnnn: {1: [], 2: [], 5: [], 4: []}
tctbnnnnn 2
here list of tctbnnnnn: {1: [], 2: [], 5: [], 4: []}
tctbnnnnn 2
here domain : []
33 ino one! here the back info : {1: [], 2: []} ino one! here the back info target ctbn: {1: [], 2: [], 5: [], 4: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': []}
here list of tctbnnnnn: {1: [], 2: [], 5: [], 4: []}
tctbnnnnn 5
here list of tctbnnnnn: {1: [], 2: [], 5: [], 4: []}
tctbnnnnn 5
here domain : []
33 ino one! here the back info : {1: [], 2: [], 5: []} ino one! here the back info target ctbn: {1: [], 2: [], 5: [], 4: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': []}
here list of tctbnnnnn: {1: [], 2: [], 5: [], 4: []}
tctbnnnnn 4
here list of tctbnnnnn: {1: [], 2: [], 5: [], 4: []}
tctbnnnnn 4
here domain : []
33 ino one! here the back info : {1: [], 2: [], 5: [], 4: []} ino one! here the back info target ctbn: {1: [], 2: [], 5: [], 4: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': []}
44 ino one! here the back info : {1: [], 2: [], 5: [], 4: []} ino one! here the back info target ctbn: {1: [], 2: [], 5: [], 4: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': []}
44 i want to return form bacck , here ass {1: [], 2: [], 5: [], 4: []}
{1: [], 2: [], 5: [], 4: []}
33 ino one! here the back info : {} ino one! here the back info target ctbn: {5: ['t3', 't4'], 3: [], 4: []} ino one! here the back info :tartget track {'t3': [], 't4': []}
here list of tctbnnnnn: {5: ['t3', 't4'], 3: [], 4: []}
tctbnnnnn 3
here list of tctbnnnnn: {5: ['t3', 't4'], 3: [], 4: []}
tctbnnnnn 3
here domain : []
33 ino one! here the back info : {3: []} ino one! here the back info target ctbn: {5: ['t3', 't4'], 3: [], 4: []} ino one! here the back info :tartget track {'t3': [], 't4': []}
here list of tctbnnnnn: {5: ['t3', 't4'], 3: [], 4: []}
tctbnnnnn 4
here list of tctbnnnnn: {5: ['t3', 't4'], 3: [], 4: []}
tctbnnnnn 4
here domain : []
33 ino one! here the back info : {3: [], 4: []} ino one! here the back info target ctbn: {5: ['t3', 't4'], 3: [], 4: []} ino one! here the back info :tartget track {'t3': [], 't4': []}
here list of tctbnnnnn: {5: ['t3', 't4'], 3: [], 4: []}
tctbnnnnn 5
here targett tctbnnnnn t3
list in domain cho back {'t3': [], 't4': []}
trk back 5  i am tracker
con back 1
here targett tctbnnnnn t4
list in domain cho back {'t3': [], 't4': []}
trk back 5  i am tracker
con back 1
here list of tctbnnnnn: {5: ['t3', 't4'], 3: [], 4: []}
tctbnnnnn 5
here targett tctbnnnnn t3
list in domain cho back {'t3': [], 't4': []}
trk back 5  i am tracker
con back 1
here targett tctbnnnnn t4
list in domain cho back {'t3': [], 't4': []}
trk back 5  i am tracker
con back 1
here domain : []
33 ino one! here the back info : {3: [], 4: [], 5: []} ino one! here the back info target ctbn: {5: ['t3', 't4'], 3: [], 4: []} ino one! here the back info :tartget track {'t3': [], 't4': []}
44 ino one! here the back info : {3: [], 4: [], 5: []} ino one! here the back info target ctbn: {5: ['t3', 't4'], 3: [], 4: []} ino one! here the back info :tartget track {'t3': [], 't4': []}
44 i want to return form bacck , here ass {3: [], 4: [], 5: []}
{3: [], 4: [], 5: ['t3', 't4']}
33 ino one! here the back info : {} ino one! here the back info target ctbn: {6: ['t2', 't1'], 1: [], 2: []} ino one! here the back info :tartget track {'t2': [], 't1': []}
here list of tctbnnnnn: {6: ['t2', 't1'], 1: [], 2: []}
tctbnnnnn 1
here list of tctbnnnnn: {6: ['t2', 't1'], 1: [], 2: []}
tctbnnnnn 1
here domain : []
33 ino one! here the back info : {1: []} ino one! here the back info target ctbn: {6: ['t2', 't1'], 1: [], 2: []} ino one! here the back info :tartget track {'t2': [], 't1': []}
here list of tctbnnnnn: {6: ['t2', 't1'], 1: [], 2: []}
tctbnnnnn 2
here list of tctbnnnnn: {6: ['t2', 't1'], 1: [], 2: []}
tctbnnnnn 2
here domain : []
33 ino one! here the back info : {1: [], 2: []} ino one! here the back info target ctbn: {6: ['t2', 't1'], 1: [], 2: []} ino one! here the back info :tartget track {'t2': [], 't1': []}
here list of tctbnnnnn: {6: ['t2', 't1'], 1: [], 2: []}
tctbnnnnn 6
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't1': []}
trk back 6  i am tracker
con back 1
here targett tctbnnnnn t1
list in domain cho back {'t2': [], 't1': []}
trk back 6  i am tracker
con back 1
here list of tctbnnnnn: {6: ['t2', 't1'], 1: [], 2: []}
tctbnnnnn 6
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't1': []}
trk back 6  i am tracker
con back 1
here targett tctbnnnnn t1
list in domain cho back {'t2': [], 't1': []}
trk back 6  i am tracker
con back 1
here domain : []
33 ino one! here the back info : {1: [], 2: [], 6: []} ino one! here the back info target ctbn: {6: ['t2', 't1'], 1: [], 2: []} ino one! here the back info :tartget track {'t2': [], 't1': []}
44 ino one! here the back info : {1: [], 2: [], 6: []} ino one! here the back info target ctbn: {6: ['t2', 't1'], 1: [], 2: []} ino one! here the back info :tartget track {'t2': [], 't1': []}
44 i want to return form bacck , here ass {1: [], 2: [], 6: []}
{1: [], 2: [], 6: ['t2', 't1']}
33 ino one! here the back info : {} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': []}
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []}
tctbnnnnn 2
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []}
tctbnnnnn 2
here domain : []
33 ino one! here the back info : {2: []} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': []}
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []}
tctbnnnnn 1
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []}
tctbnnnnn 1
here domain : []
33 ino one! here the back info : {2: [], 1: []} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': []}
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []}
tctbnnnnn 4
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []}
tctbnnnnn 4
here domain : []
33 ino one! here the back info : {2: [], 1: [], 4: []} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': []}
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []}
tctbnnnnn 5
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []}
tctbnnnnn 5
here domain : []
33 ino one! here the back info : {2: [], 1: [], 4: [], 5: []} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': []}
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []}
tctbnnnnn 3
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t3
list in domain cho back {'t2': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t4
list in domain cho back {'t2': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []}
tctbnnnnn 3
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t3
list in domain cho back {'t2': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t4
list in domain cho back {'t2': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here domain : []
33 ino one! here the back info : {2: [], 1: [], 4: [], 5: [], 3: []} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': []}
44 ino one! here the back info : {2: [], 1: [], 4: [], 5: [], 3: []} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: [], 1: [], 4: [], 5: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': []}
44 i want to return form bacck , here ass {2: [], 1: [], 4: [], 5: [], 3: []}
{2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}
33 ino one! here the back info : {} ino one! here the back info target ctbn: {2: ['t2', 't1', 't3 '], 1: [], 3: []} ino one! here the back info :tartget track {'t2': [], 't1': [], 't3 ': []}
here list of tctbnnnnn: {2: ['t2', 't1', 't3 '], 1: [], 3: []}
tctbnnnnn 1
here list of tctbnnnnn: {2: ['t2', 't1', 't3 '], 1: [], 3: []}
tctbnnnnn 1
here domain : []
33 ino one! here the back info : {1: []} ino one! here the back info target ctbn: {2: ['t2', 't1', 't3 '], 1: [], 3: []} ino one! here the back info :tartget track {'t2': [], 't1': [], 't3 ': []}
here list of tctbnnnnn: {2: ['t2', 't1', 't3 '], 1: [], 3: []}
tctbnnnnn 3
here list of tctbnnnnn: {2: ['t2', 't1', 't3 '], 1: [], 3: []}
tctbnnnnn 3
here domain : []
33 ino one! here the back info : {1: [], 3: []} ino one! here the back info target ctbn: {2: ['t2', 't1', 't3 '], 1: [], 3: []} ino one! here the back info :tartget track {'t2': [], 't1': [], 't3 ': []}
here list of tctbnnnnn: {2: ['t2', 't1', 't3 '], 1: [], 3: []}
tctbnnnnn 2
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t1
list in domain cho back {'t2': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t3 
list in domain cho back {'t2': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here list of tctbnnnnn: {2: ['t2', 't1', 't3 '], 1: [], 3: []}
tctbnnnnn 2
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t1
list in domain cho back {'t2': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t3 
list in domain cho back {'t2': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here domain : []
33 ino one! here the back info : {1: [], 3: [], 2: []} ino one! here the back info target ctbn: {2: ['t2', 't1', 't3 '], 1: [], 3: []} ino one! here the back info :tartget track {'t2': [], 't1': [], 't3 ': []}
44 ino one! here the back info : {1: [], 3: [], 2: []} ino one! here the back info target ctbn: {2: ['t2', 't1', 't3 '], 1: [], 3: []} ino one! here the back info :tartget track {'t2': [], 't1': [], 't3 ': []}
44 i want to return form bacck , here ass {1: [], 3: [], 2: []}
{1: [], 3: [], 2: ['t2', 't1', 't3 ']}
Connection refused. Retrying in 1 second...
sender send message :  {0: [[], {}]}
sender send message :  {0: [[], {}]}
sender send message :  {0: [[], {}]}
1 say here the general buffer:  {0: [[], {}]} have change ?  True
1 say my tree is :  {1: [], 2: [], 5: [], 4: []}
1 send to---> 2
 1 say: i am sending :  {1: [['t2', 't3', 't1'], {1: [], 2: [], 5: [], 4: []}]}
sender send message :  {1: [['t2', 't3', 't1'], {1: [], 2: [], 5: [], 4: []}]}
1 send to---> 5
 1 say: i am sending :  {1: [['t2', 't3', 't1'], {1: [], 2: [], 5: [], 4: []}]}
sender send message :  {1: [['t2', 't3', 't1'], {1: [], 2: [], 5: [], 4: []}]}
1 send to---> 4
 1 say: i am sending :  {1: [['t2', 't3', 't1'], {1: [], 2: [], 5: [], 4: []}]}
sender send message :  {1: [['t2', 't3', 't1'], {1: [], 2: [], 5: [], 4: []}]}
update negber from {1: [], 2: [], 5: [], 4: []} to 3:['t2', 't3', 't4']
['t2', 't3', 't4']
target cannot get tracked
i am 1 g compair{2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']} with {1: [], 2: [], 5: [], 4: []}
i am 1 and iam in comp , here my localtree : {1: [], 2: [], 5: [], 4: []}
 and here is received one : {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}
update negber from {1: [], 2: [], 5: [], 4: [], 3: ['t2', 't3', 't4']} to 2:['t2', 't1', 't3 ']
['t2', 't1', 't3 ']
target cannot get tracked
i am 1 g compair{1: [], 3: [], 2: ['t2', 't1', 't3 ']} with {1: [], 2: [], 5: [], 4: []}
i am 1 and iam in comp , here my localtree : {1: [], 2: [], 5: [], 4: []}
 and here is received one : {1: [], 3: [], 2: ['t2', 't1', 't3 ']}
33 ino one! here the back info : {1: [], 3: [], 2: ['t2', 't1', 't3 ']} ino one! here the back info target ctbn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
here list of tctbnnnnn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4']}
tctbnnnnn 5
here list of tctbnnnnn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4']}
tctbnnnnn 5
here domain : []
33 ino one! here the back info : {1: [], 3: [], 2: ['t2', 't1', 't3 '], 5: []} ino one! here the back info target ctbn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
here list of tctbnnnnn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4']}
tctbnnnnn 4
here list of tctbnnnnn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4']}
tctbnnnnn 4
here domain : []
33 ino one! here the back info : {1: [], 3: [], 2: ['t2', 't1', 't3 '], 5: [], 4: []} ino one! here the back info target ctbn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
44 ino one! here the back info : {1: [], 3: [], 2: ['t2', 't1', 't3 '], 5: [], 4: []} ino one! here the back info target ctbn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
44 i want to return form bacck , here ass {1: [], 3: [], 2: ['t2', 't1', 't3 '], 5: [], 4: []}
{1: [], 3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 5: [], 4: []}
update negber from {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4']} to 6:['t2', 't1']
['t2', 't1']
target cannot get tracked
i am 1 g compair{1: [], 2: [], 6: ['t2', 't1']} with {1: [], 3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 5: [], 4: []}
i am 1 and iam in comp , here my localtree : {1: [], 3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 5: [], 4: []}
 and here is received one : {1: [], 2: [], 6: ['t2', 't1']}
33 ino one! here the back info : {1: [], 2: [], 6: ['t2', 't1']} ino one! here the back info target ctbn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
here list of tctbnnnnn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 5
here list of tctbnnnnn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 5
here domain : []
33 ino one! here the back info : {1: [], 2: [], 6: ['t2', 't1'], 5: []} ino one! here the back info target ctbn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
here list of tctbnnnnn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 4
here list of tctbnnnnn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 4
here domain : []
33 ino one! here the back info : {1: [], 2: [], 6: ['t2', 't1'], 5: [], 4: []} ino one! here the back info target ctbn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
here list of tctbnnnnn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 3
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t3
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t4
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 3  i am tracker
con back 1
here list of tctbnnnnn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 3
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t3
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t4
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 3  i am tracker
con back 1
here domain : []
33 ino one! here the back info : {1: [], 2: [], 6: ['t2', 't1'], 5: [], 4: [], 3: []} ino one! here the back info target ctbn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
44 ino one! here the back info : {1: [], 2: [], 6: ['t2', 't1'], 5: [], 4: [], 3: []} ino one! here the back info target ctbn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
44 i want to return form bacck , here ass {1: [], 2: [], 6: ['t2', 't1'], 5: [], 4: [], 3: []}
{1: [], 2: ['t2', 't1', 't3 '], 6: ['t2', 't1'], 5: [], 4: [], 3: ['t2', 't3', 't4']}
update negber from {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} to 4:['t3', 't4']
['t3', 't4']
target cannot get tracked
i am 1 g compair{5: [], 3: [], 1: [], 4: ['t3', 't4']} with {1: [], 2: ['t2', 't1', 't3 '], 6: ['t2', 't1'], 5: [], 4: [], 3: ['t2', 't3', 't4']}
i am 1 and iam in comp , here my localtree : {1: [], 2: ['t2', 't1', 't3 '], 6: ['t2', 't1'], 5: [], 4: [], 3: ['t2', 't3', 't4']}
 and here is received one : {5: [], 3: [], 1: [], 4: ['t3', 't4']}
33 ino one! here the back info : {5: [], 3: [], 1: [], 4: ['t3', 't4']} ino one! here the back info target ctbn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: ['t3', 't4'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
here list of tctbnnnnn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: ['t3', 't4'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 6
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 6  i am tracker
con back 2
here targett tctbnnnnn t1
list in domain cho back Connection refused. Retrying in 1 second...
sender send message :  {0: [[], {}]}
sender send message :  {0: [[], {}]}
sender send message :  {0: [[], {}]}
3 say here the general buffer:  {0: [[], {}], 4: [['t3', 't4'], {5: [], 3: [], 1: [], 4: ['t3', 't4']}]} have change ?  True
3 say my tree is :  {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}
3 send to---> 2
 3 say: i am sending :  {3: [['t2', 't3', 't4'], {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}]}
sender send message :  {3: [['t2', 't3', 't4'], {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}]}
3 send to---> 1
 3 say: i am sending :  {3: [['t2', 't3', 't4'], {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}]}
sender send message :  {3: [['t2', 't3', 't4'], {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}]}
3 send to---> 4
 3 say: i am sending :  {3: [['t2', 't3', 't4'], {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}]}
sender send message :  {3: [['t2', 't3', 't4'], {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}]}
3 send to---> 5
 3 say: i am sending :  {3: [['t2', 't3', 't4'], {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}]}
sender send message :  {3: [['t2', 't3', 't4'], {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}]}
update negber from {2: [], 1: [], 4: [], 5: []} to 2:['t2', 't1', 't3 ']
['t2', 't1', 't3 ']
target cannot get tracked
i am 3 g compair{1: [], 3: [], 2: ['t2', 't1', 't3 ']} with {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}
i am 3 and iam in comp , here my localtree : {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}
 and here is received one : {1: [], 3: [], 2: ['t2', 't1', 't3 ']}
33 ino one! here the back info : {1: [], 3: [], 2: ['t2', 't1', 't3 ']} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: []}
tctbnnnnn 4
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: []}
tctbnnnnn 4
here domain : []
33 ino one! here the back info : {1: [], 3: [], 2: ['t2', 't1', 't3 '], 4: []} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: []}
tctbnnnnn 5
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: []}
tctbnnnnn 5
here domain : []
33 ino one! here the back info : {1: [], 3: [], 2: ['t2', 't1', 't3 '], 4: [], 5: []} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
44 ino one! here the back info : {1: [], 3: [], 2: ['t2', 't1', 't3 '], 4: [], 5: []} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: []} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
44 i want to return form bacck , here ass {1: [], 3: [], 2: ['t2', 't1', 't3 '], 4: [], 5: []}
{1: [], 3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 4: [], 5: []}
update negber from {2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: []} to 5:['t3', 't4']
['t3', 't4']
target cannot get tracked
i am 3 g compair{3: [], 4: [], 5: ['t3', 't4']} with {1: [], 3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 4: [], 5: []}
i am 3 and iam in comp , here my localtree : {1: [], 3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 4: [], 5: []}
 and here is received one : {3: [], 4: [], 5: ['t3', 't4']}
33 ino one! here the back info : {3: [], 4: [], 5: ['t3', 't4']} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: ['t3', 't4']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: ['t3', 't4']}
tctbnnnnn 1
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: ['t3', 't4']}
tctbnnnnn 1
here domain : []
33 ino one! here the back info : {3: [], 4: [], 5: ['t3', 't4'], 1: []} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: ['t3', 't4']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: ['t3', 't4']}
tctbnnnnn 2
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t1
list in domain cho back {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t3 
list in domain cho back {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: ['t3', 't4']}
tctbnnnnn 2
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t1
list in domain cho back {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t3 
list in domain cho back {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here domain : []
33 ino one! here the back info : {3: [], 4: [], 5: ['t3', 't4'], 1: [], 2: []} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: ['t3', 't4']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
44 ino one! here the back info : {3: [], 4: [], 5: ['t3', 't4'], 1: [], 2: []} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: ['t3', 't4']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
44 i want to return form bacck , here ass {3: [], 4: [], 5: ['t3', 't4'], 1: [], 2: []}
{3: ['t2', 't3', 't4'], 4: [], 5: ['t3', 't4'], 1: [], 2: ['t2', 't1', 't3 ']}
update negber from {2: ['t2', 't1', 't3 '], 1: [], 4: [], 5: ['t3', 't4']} to 4:['t3', 't4']
['t3', 't4']
target cannot get tracked
i am 3 g compair{5: [], 3: [], 1: [], 4: ['t3', 't4']} with {3: ['t2', 't3', 't4'], 4: [], 5: ['t3', 't4'], 1: [], 2: ['t2', 't1', 't3 ']}
i am 3 and iam in comp , here my localtree : {3: ['t2', 't3', 't4'], 4: [], 5: ['t3', 't4'], 1: [], 2: ['t2', 't1', 't3 ']}
 and here is received one : {5: [], 3: [], 1: [], 4: ['t3', 't4']}
33 ino one! here the back info : {5: [], 3: [], 1: [], 4: ['t3', 't4']} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: ['t3', 't4'], 5: ['t3', 't4']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: ['t3', 't4'], 5: ['t3', 't4']}
tctbnnnnn 2
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t1
list in domain cho back {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t3 
list in domain cho back {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here list of tctbnnnnn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: ['t3', 't4'], 5: ['t3', 't4']}
tctbnnnnn 2
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t1
list in domain cho back {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t3 
Exception ignored in atexit callback: <function _exit_function at 0x7f5f7f45c860>
Process Process-4:
Process Process-3:
Process Process-1:
Process Process-2:
Traceback (most recent call last):
  File "/usr/lib/python3.11/multiprocessing/util.py", line 360, in _exit_function
Process Process-4:2:
Process Process-1:2:
Process Process-3:2:
Process Process-5:2:
Process Process-2:2:
    p.join()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/popen_fork.py", line 43, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt: 
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Process Process-6:2:
Traceback (most recent call last):
Traceback (most recent call last):
  File "/usr/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/kk_gorbee/Documents/project/WirelessSensorTrackingSystem/./main.py", line 281, in sensor
    self.update_locfal_tree()
    ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kk_gorbee/Documents/project/WirelessSensorTrackingSystem/./main.py", line 281, in sensor
    self.update_locfal_tree()
    ^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/kk_gorbee/Documents/project/WirelessSensorTrackingSystem/./main.py", line 281, in sensor
    self.update_locfal_tree()
    ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kk_gorbee/Documents/project/WirelessSensorTrackingSystem/jsonSenderAndReceiver.py", line 43, in receive_message
    conn, addr = server_socket.accept()
                 ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kk_gorbee/Documents/project/WirelessSensorTrackingSystem/./main.py", line 281, in sensor
    self.update_locfal_tree()
    ^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kk_gorbee/Documents/project/WirelessSensorTrackingSystem/jsonSenderAndReceiver.py", line 43, in receive_message
    conn, addr = server_socket.accept()
                 ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kk_gorbee/Documents/project/WirelessSensorTrackingSystem/jsonSenderAndReceiver.py", line 43, in receive_message
    conn, addr = server_socket.accept()
                 ^^^^^^^^^^^^^^^^^^^^^^
  File "/home/kk_gorbee/Documents/project/WirelessSensorTrackingSystem/jsonSenderAndReceiver.py", line 43, in receive_message
    conn, addr = server_socket.accept()
                 ^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/socket.py", line 294, in accept
    fd, addr = self._accept()
               ^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/socket.py", line 294, in accept
    fd, addr = self._accept()
               ^^^^^^^^^^^^^^
AttributeError: 'Sensor' object has no attribute 'update_locfal_tree'
  File "/usr/lib/python3.11/socket.py", line 294, in accept
    fd, addr = self._accept()
               ^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/socket.py", line 294, in accept
    fd, addr = self._accept()
               ^^^^^^^^^^^^^^
AttributeError: 'Sensor' object has no attribute 'update_locfal_tree'
AttributeError: 'Sensor' object has no attribute 'update_locfal_tree'
AttributeError: 'Sensor' object has no attribute 'update_locfal_tree'
KeyboardInterrupt
KeyboardInterrupt
KeyboardInterrupt
KeyboardInterrupt

During handling of the above exception, another exception occurred:


During handling of the above exception, another exception occurred:


During handling of the above exception, another exception occurred:


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
Traceback (most recent call last):
  File "/usr/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/kk_gorbee/Documents/project/WirelessSensorTrackingSystem/jsonSenderAndReceiver.py", line 43, in receive_message
    conn, addr = server_socket.accept()
                 ^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/socket.py", line 294, in accept
    fd, addr = self._accept()
               ^^^^^^^^^^^^^^
KeyboardInterrupt
------receiver of 3 is running-------- 
Got connection from ('127.0.0.1', 59592)
Received message from client: {0: [[], {}]}
Got connection from ('127.0.0.1', 59606)
Received message from client: {4: [['t3', 't4'], {5: [], 3: [], 1: [], 4: ['t3', 't4']}]}
Got connection from ('127.0.0.1', 59620)
Received message from client: {5: [['t3', 't4'], {3: [], 4: [], 5: ['t3', 't4']}]}
Got connection from ('127.0.0.1', 59626)
Received message from client: {2: [['t2', 't1', 't3 '], {1: [], 3: [], 2: ['t2', 't1', 't3 ']}]}
------receiver of 1 is running-------- 
Got connection from ('127.0.0.1', 39290)
Received message from client: {0: [[], {}]}
Got connection from ('127.0.0.1', 39292)
Received message from client: {0: [[], {}]}
Got connection from ('127.0.0.1', 39302)
Received message from client: {0: [[], {}]}
Got connection from ('127.0.0.1', 39316)
Received message from client: {4: [['t3', 't4'], {5: [], 3: [], 1: [], 4: ['t3', 't4']}]}
Got connection from ('127.0.0.1', 39328)
Received message from client: {0: [[], {}]}
Got connection from ('127.0.0.1', 39336)
Received message from client: {6: [['t2', 't1'], {1: [], 2: [], 6: ['t2', 't1']}]}
Got connection from ('127.0.0.1', 39346)
Received message from client: {2: [['t2', 't1', 't3 '], {1: [], 3: [], 2: ['t2', 't1', 't3 ']}]}
Got connection from ('127.0.0.1', 39350)
Received message from client: {3: [['t2', 't3', 't4'], {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}]}
  File "/usr/lib/python3.11/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
------receiver of 2 is running-------- 
Got connection from ('127.0.0.1', 41142)
Received message from client: {0: [[], {}]}
Got connection from ('127.0.0.1', 41156)
Received message from client: {1: [['t2', 't3', 't1'], {1: [], 2: [], 5: [], 4: []}]}
Got connection from ('127.0.0.1', 41166)
Received message from client: {6: [['t2', 't1'], {1: [], 2: [], 6: ['t2', 't1']}]}
Got connection from ('127.0.0.1', 41180)
Received message from client: {3: [['t2', 't3', 't4'], {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}]}
------receiver of 4 is running-------- 
Got connection from ('127.0.0.1', 39208)
Received message from client: {0: [[], {}]}
Got connection from ('127.0.0.1', 39210)
Received message from client: {1: [['t2', 't3', 't1'], {1: [], 2: [], 5: [], 4: []}]}
Got connection from ('127.0.0.1', 39222)
Received message from client: {0: [[], {}]}
Got connection from ('127.0.0.1', 39226)
Received message from client: {0: [[], {}]}
Got connection from ('127.0.0.1', 39232)
Received message from client: {5: [['t3', 't4'], {3: [], 4: [], 5: ['t3', 't4']}]}
Got connection from ('127.0.0.1', 39244)
Received message from client: {3: [['t2', 't3', 't4'], {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}]}
  File "/usr/lib/python3.11/multiprocessing/util.py", line 360, in _exit_function
    p.join()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/popen_fork.py", line 43, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/usr/lib/python3.11/multiprocessing/util.py", line 360, in _exit_function
    p.join()
KeyboardInterrupt
  File "/usr/lib/python3.11/multiprocessing/util.py", line 360, in _exit_function
    p.join()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/popen_fork.py", line 43, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/usr/lib/python3.11/multiprocessing/popen_fork.py", line 43, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/util.py", line 360, in _exit_function
    p.join()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
          ^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
KeyboardInterrupt
  File "/usr/lib/python3.11/multiprocessing/popen_fork.py", line 43, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
------receiver of 5 is running-------- 
Got connection from ('127.0.0.1', 36356)
Received message from client: {0: [[], {}]}
Got connection from ('127.0.0.1', 36368)
Received message from client: {1: [['t2', 't3', 't1'], {1: [], 2: [], 5: [], 4: []}]}
Got connection from ('127.0.0.1', 36380)
Received message from client: {4: [['t3', 't4'], {5: [], 3: [], 1: [], 4: ['t3', 't4']}]}
Got connection from ('127.0.0.1', 36386)
Received message from client: {0: [[], {}]}
Got connection from ('127.0.0.1', 36398)
Received message from client: {3: [['t2', 't3', 't4'], {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}]}
list in domain cho back {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
trk back 2  i am tracker
con back 1
here domain : []
33 ino one! here the back info : {5: [], 3: [], 1: [], 4: ['t3', 't4'], 2: []} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: ['t3', 't4'], 5: ['t3', 't4']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
44 ino one! here the back info : {5: [], 3: [], 1: [], 4: ['t3', 't4'], 2: []} ino one! here the back info target ctbn: {3: ['t2', 't3', 't4'], 2: ['t2', 't1', 't3 '], 1: [], 4: ['t3', 't4'], 5: ['t3', 't4']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't4': [], 't1': [], 't3 ': []}
44 i want to return form bacck , here ass {5: [], 3: [], 1: [], 4: ['t3', 't4'], 2: []}
{5: ['t3', 't4'], 3: ['t2', 't3', 't4'], 1: [], 4: ['t3', 't4'], 2: ['t2', 't1', 't3 ']}
update negber from {2: ['t2', 't1', 't3 '], 1: [], 4: ['t3', 't4'], 5: ['t3', 't4']} to 0:[]
Connection refused. Retrying in 1 second...
sender send message :  {0: [[], {}]}
sender send message :  {0: [[], {}]}
4 say here the general buffer:  {} have change ?  True
4 say my tree is :  {5: [], 3: [], 1: [], 4: ['t3', 't4']}
4 send to---> 5
 4 say: i am sending :  {4: [['t3', 't4'], {5: [], 3: [], 1: [], 4: ['t3', 't4']}]}
sender send message :  {4: [['t3', 't4'], {5: [], 3: [], 1: [], 4: ['t3', 't4']}]}
4 send to---> 3
 4 say: i am sending :  {4: [['t3', 't4'], {5: [], 3: [], 1: [], 4: ['t3', 't4']}]}
sender send message :  {4: [['t3', 't4'], {5: [], 3: [], 1: [], 4: ['t3', 't4']}]}
4 send to---> 1
 4 say: i am sending :  {4: [['t3', 't4'], {5: [], 3: [], 1: [], 4: ['t3', 't4']}]}
sender send message :  {4: [['t3', 't4'], {5: [], 3: [], 1: [], 4: ['t3', 't4']}]}
update negber from {5: [], 3: [], 1: []} to 3:['t2', 't3', 't4']
['t2', 't3', 't4']
target cannot get tracked
i am 4 g compair{2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']} with {5: [], 3: [], 1: [], 4: ['t3', 't4']}
i am 4 and iam in comp , here my localtree : {5: [], 3: [], 1: [], 4: ['t3', 't4']}
 and here is received one : {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}
update negber from {5: [], 3: ['t2', 't3', 't4'], 1: []} to 5:['t3', 't4']
['t3', 't4']
target cannot get tracked
i am 4 g compair{3: [], 4: [], 5: ['t3', 't4']} with {5: [], 3: [], 1: [], 4: ['t3', 't4']}
i am 4 and iam in comp , here my localtree : {5: [], 3: [], 1: [], 4: ['t3', 't4']}
 and here is received one : {3: [], 4: [], 5: ['t3', 't4']}
33 ino one! here the back info : {3: [], 4: [], 5: ['t3', 't4']} ino one! here the back info target ctbn: {4: ['t3', 't4'], 5: ['t3', 't4'], 3: ['t2', 't3', 't4'], 1: []} ino one! here the back info :tartget track {'t3': [], 't4': [], 't2': []}
here list of tctbnnnnn: {4: ['t3', 't4'], 5: ['t3', 't4'], 3: ['t2', 't3', 't4'], 1: []}
tctbnnnnn 1
here list of tctbnnnnn: {4: ['t3', 't4'], 5: ['t3', 't4'], 3: ['t2', 't3', 't4'], 1: []}
tctbnnnnn 1
here domain : []
33 ino one! here the back info : {3: [], 4: [], 5: ['t3', 't4'], 1: []} ino one! here the back info target ctbn: {4: ['t3', 't4'], 5: ['t3', 't4'], 3: ['t2', 't3', 't4'], 1: []} ino one! here the back info :tartget track {'t3': [], 't4': [], 't2': []}
44 ino one! here the back info : {3: [], 4: [], 5: ['t3', 't4'], 1: []} ino one! here the back info target ctbn: {4: ['t3', 't4'], 5: ['t3', 't4'], 3: ['t2', 't3', 't4'], 1: []} ino one! here the back info :tartget track {'t3': [], 't4': [], 't2': []}
44 i want to return form bacck , here ass {3: [], 4: [], 5: ['t3', 't4'], 1: []}
{3: ['t2', 't3', 't4'], 4: ['t3', 't4'], 5: ['t3', 't4'], 1: []}
update negber from {5: ['t3', 't4'], 3: ['t2', 't3', 't4'], 1: []} to 1:['t2', 't3', 't1']
['t2', 't3', 't1']
target cannot get tracked
i am 4 g compair{1: [], 2: [], 5: [], 4: []} with {3: ['t2', 't3', 't4'], 4: ['t3', 't4'], 5: ['t3', 't4'], 1: []}
i am 4 and iam in comp , here my localtree : {3: ['t2', 't3', 't4'], 4: ['t3', 't4'], 5: ['t3', 't4'], 1: []}
 and here is received one : {1: [], 2: [], 5: [], 4: []}
33 ino one! here the back info : {1: [], 5: [], 4: []} ino one! here the back info target ctbn: {4: ['t3', 't4'], 5: ['t3', 't4'], 3: ['t2', 't3', 't4'], 1: ['t2', 't3', 't1']} ino one! here the back info :tartget track {'t3': [], 't4': [], 't2': [], 't1': []}
here list of tctbnnnnn: {4: ['t3', 't4'], 5: ['t3', 't4'], 3: ['t2', 't3', 't4'], 1: ['t2', 't3', 't1']}
tctbnnnnn 3
here targett tctbnnnnn t2
list in domain cho back {'t3': [], 't4': [], 't2': [], 't1': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t3
list in domain cho back {'t3': [], 't4': [], 't2': [], 't1': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t4
list in domain cho back {'t3': [], 't4': [], 't2': [], 't1': []}
trk back 3  i am tracker
con back 1
here list of tctbnnnnn: {4: ['t3', 't4'], 5: ['t3', 't4'], 3: ['t2', 't3', 't4'], 1: ['t2', 't3', 't1']}
tctbnnnnn 3
here targett tctbnnnnn t2
list in domain cho back {'t3': [], 't4': [], 't2': [], 't1': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t3
list in domain cho back {'t3': [], 't4': [], 't2': [], 't1': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t4
list in domain cho back {'t3': [], 't4': [], 't2': [], 't1': []}
trk back 3  i am tracker
con back 1
here domain : []
33 ino one! here the back info : {1: [], 5: [], 4: [], 3: []} ino one! here the back info target ctbn: {4: ['t3', 't4'], 5: ['t3', 't4'], 3: ['t2', 't3', 't4'], 1: ['t2', 't3', 't1']} ino one! here the back info :tartget track {'t3': [], 't4': [], 't2': [], 't1': []}
44 ino one! here the back info : {1: [], 5: [], 4: [], 3: []} ino one! here the back info target ctbn: {4: ['t3', 't4'], 5: ['t3', 't4'], 3: ['t2', 't3', 't4'], 1: ['t2', 't3', 't1']} ino one! here the back info :tartget track {'t3': [], 't4': [], 't2': [], 't1': []}
44 i want to return form bacck , here ass {1: [], 5: [], 4: [], 3: []}
{1: ['t2', 't3', 't1'], 5: ['t3', 't4'], 4: ['t3', 't4'], 3: ['t2', 't3', 't4']}
update negber from {5: ['t3', 't4'], 3: ['t2', 't3', 't4'], 1: ['t2', 't3', 't1']} to 0:[]
sender send message :  {0: [[], {}]}
Connection refused. Retrying in 1 second...
2 say here the general buffer:  {0: [[], {}], 1: [['t2', 't3', 't1'], {1: [], 2: [], 5: [], 4: []}]} have change ?  True
2 say my tree is :  {1: [], 3: [], 2: ['t2', 't1', 't3 ']}
2 send to---> 1
 2 say: i am sending :  {2: [['t2', 't1', 't3 '], {1: [], 3: [], 2: ['t2', 't1', 't3 ']}]}
sender send message :  {2: [['t2', 't1', 't3 '], {1: [], 3: [], 2: ['t2', 't1', 't3 ']}]}
2 send to---> 3
 2 say: i am sending :  {2: [['t2', 't1', 't3 '], {1: [], 3: [], 2: ['t2', 't1', 't3 ']}]}
sender send message :  {2: [['t2', 't1', 't3 '], {1: [], 3: [], 2: ['t2', 't1', 't3 ']}]}
update negber from {1: [], 3: []} to 3:['t2', 't3', 't4']
['t2', 't3', 't4']
target cannot get tracked
i am 2 g compair{2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']} with {1: [], 3: [], 2: ['t2', 't1', 't3 ']}
i am 2 and iam in comp , here my localtree : {1: [], 3: [], 2: ['t2', 't1', 't3 ']}
 and here is received one : {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}
update negber from {1: [], 3: ['t2', 't3', 't4']} to 6:['t2', 't1']
['t2', 't1']
target cannot get tracked
i am 2 g compair{1: [], 2: [], 6: ['t2', 't1']} with {1: [], 3: [], 2: ['t2', 't1', 't3 ']}
i am 2 and iam in comp , here my localtree : {1: [], 3: [], 2: ['t2', 't1', 't3 ']}
 and here is received one : {1: [], 2: [], 6: ['t2', 't1']}
33 ino one! here the back info : {1: [], 2: [], 6: ['t2', 't1']} ino one! here the back info target ctbn: {2: ['t2', 't1', 't3 '], 1: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
here list of tctbnnnnn: {2: ['t2', 't1', 't3 '], 1: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 3
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t3
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t4
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here list of tctbnnnnn: {2: ['t2', 't1', 't3 '], 1: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 3
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t3
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t4
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here domain : []
33 ino one! here the back info : {1: [], 2: [], 6: ['t2', 't1'], 3: []} ino one! here the back info target ctbn: {2: ['t2', 't1', 't3 '], 1: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
44 ino one! here the back info : {1: [], 2: [], 6: ['t2', 't1'], 3: []} ino one! here the back info target ctbn: {2: ['t2', 't1', 't3 '], 1: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
44 i want to return form bacck , here ass {1: [], 2: [], 6: ['t2', 't1'], 3: []}
{1: [], 2: ['t2', 't1', 't3 '], 6: ['t2', 't1'], 3: ['t2', 't3', 't4']}
update negber from {1: [], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} to 1:['t2', 't3', 't1']
['t2', 't3', 't1']
target cannot get tracked
i am 2 g compair{1: [], 2: [], 5: [], 4: []} with {1: [], 2: ['t2', 't1', 't3 '], 6: ['t2', 't1'], 3: ['t2', 't3', 't4']}
i am 2 and iam in comp , here my localtree : {1: [], 2: ['t2', 't1', 't3 '], 6: ['t2', 't1'], 3: ['t2', 't3', 't4']}
 and here is received one : {1: [], 2: [], 5: [], 4: []}
33 ino one! here the back info : {1: [], 2: []} ino one! here the back info target ctbn: {2: ['t2', 't1', 't3 '], 1: ['t2', 't3', 't1'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
here list of tctbnnnnn: {2: ['t2', 't1', 't3 '], 1: ['t2', 't3', 't1'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 6
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 6  i am tracker
con back 2
here targett tctbnnnnn t1
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 6  i am tracker
con back 1
here list of tctbnnnnn: {2: ['t2', 't1', 't3 '], 1: ['t2', 't3', 't1'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 6
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 6  i am tracker
con back 2
here targett tctbnnnnn t1
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 6  i am tracker
con back 1
here domain : []
33 ino one! here the back info : {1: [], 2: [], 6: []} ino one! here the back info target ctbn: {2: ['t2', 't1', 't3 '], 1: ['t2', 't3', 't1'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
here list of tctbnnnnn: {2: ['t2', 't1', 't3 '], 1: ['t2', 't3', 't1'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 3
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t3
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t4
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here list of tctbnnnnn: {2: ['t2', 't1', 't3 '], 1: ['t2', 't3', 't1'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 3
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t3
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here targett tctbnnnnn t4
list in domain cho back {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
trk back 3  i am tracker
con back 1
here domain : []
33 ino one! here the back info : {1: [], 2: [], 6: [], 3: []} ino one! here the back info target ctbn: {2: ['t2', 't1', 't3 '], 1: ['t2', 't3', 't1'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
44 ino one! here the back info : {1: [], 2: [], 6: [], 3: []} ino one! here the back info target ctbn: {2: ['t2', 't1', 't3 '], 1: ['t2', 't3', 't1'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't1': [], 't3 ': [], 't3': [], 't4': []}
44 i want to return form bacck , here ass {1: [], 2: [], 6: [], 3: []}
{1: ['t2', 't3', 't1'], 2: ['t2', 't1', 't3 '], 6: ['t2', 't1'], 3: ['t2', 't3', 't4']}
update negber from {1: ['t2', 't3', 't1'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} to 0:[]
{'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 6  i am tracker
con back 2
here list of tctbnnnnn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: ['t3', 't4'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 6
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 6  i am tracker
con back 2
here targett tctbnnnnn t1
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 6  i am tracker
con back 2
here domain : []
33 ino one! here the back info : {5: [], 3: [], 1: [], 4: ['t3', 't4'], 6: []} ino one! here the back info target ctbn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: ['t3', 't4'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
here list of tctbnnnnn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: ['t3', 't4'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 2
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t1
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t3 
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 2  i am tracker
con back 1
here list of tctbnnnnn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: ['t3', 't4'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']}
tctbnnnnn 2
here targett tctbnnnnn t2
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t1
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 2  i am tracker
con back 1
here targett tctbnnnnn t3 
list in domain cho back {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
trk back 2  i am tracker
con back 1
here domain : []
33 ino one! here the back info : {5: [], 3: [], 1: [], 4: ['t3', 't4'], 6: [], 2: []} ino one! here the back info target ctbn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: ['t3', 't4'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
44 ino one! here the back info : {5: [], 3: [], 1: [], 4: ['t3', 't4'], 6: [], 2: []} ino one! here the back info target ctbn: {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: ['t3', 't4'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} ino one! here the back info :tartget track {'t2': [], 't3': [], 't1': [], 't3 ': [], 't4': []}
44 i want to return form bacck , here ass {5: [], 3: [], 1: [], 4: ['t3', 't4'], 6: [], 2: []}
{5: [], 3: ['t2', 't3', 't4'], 1: [], 4: ['t3', 't4'], 6: ['t2', 't1'], 2: ['t2', 't1', 't3 ']}
update negber from {1: [], 2: ['t2', 't1', 't3 '], 5: [], 4: ['t3', 't4'], 3: ['t2', 't3', 't4'], 6: ['t2', 't1']} to 0:[]
Process Process-5:
  File "/usr/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/kk_gorbee/Documents/project/WirelessSensorTrackingSystem/jsonSenderAndReceiver.py", line 43, in receive_message
    conn, addr = server_socket.accept()
                 ^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/socket.py", line 294, in accept
    fd, addr = self._accept()
               ^^^^^^^^^^^^^^
KeyboardInterrupt
------receiver of 6 is running-------- 
Traceback (most recent call last):
Process Process-6:
Traceback (most recent call last):
  File "/usr/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/kk_gorbee/Documents/project/WirelessSensorTrackingSystem/./main.py", line 281, in sensor
    self.update_locfal_tree()
    ^^^^^^^^^^^^^^^^^^^^^^^
AttributeError: 'Sensor' object has no attribute 'update_locfal_tree'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.11/multiprocessing/process.py", line 317, in _bootstrap
    util._exit_function()
  File "/usr/lib/python3.11/multiprocessing/util.py", line 360, in _exit_function
    p.join()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 149, in join
    res = self._popen.wait(timeout)
          ^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/popen_fork.py", line 43, in wait
    return self.poll(os.WNOHANG if timeout == 0.0 else 0)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/usr/lib/python3.11/multiprocessing/popen_fork.py", line 27, in poll
    pid, sts = os.waitpid(self.pid, flag)
               ^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
Connection refused. Retrying in 1 second...
sender send message :  {0: [[], {}]}
5 say here the general buffer:  {0: [[], {}], 1: [['t2', 't3', 't1'], {1: [], 2: [], 5: [], 4: []}], 4: [['t3', 't4'], {5: [], 3: [], 1: [], 4: ['t3', 't4']}]} have change ?  True
5 say my tree is :  {3: [], 4: [], 5: ['t3', 't4']}
5 send to---> 3
 5 say: i am sending :  {5: [['t3', 't4'], {3: [], 4: [], 5: ['t3', 't4']}]}
sender send message :  {5: [['t3', 't4'], {3: [], 4: [], 5: ['t3', 't4']}]}
5 send to---> 4
 5 say: i am sending :  {5: [['t3', 't4'], {3: [], 4: [], 5: ['t3', 't4']}]}
sender send message :  {5: [['t3', 't4'], {3: [], 4: [], 5: ['t3', 't4']}]}
update negber from {3: [], 4: []} to 3:['t2', 't3', 't4']
['t2', 't3', 't4']
target cannot get tracked
i am 5 g compair{2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']} with {3: [], 4: [], 5: ['t3', 't4']}
i am 5 and iam in comp , here my localtree : {3: [], 4: [], 5: ['t3', 't4']}
 and here is received one : {2: [], 1: [], 4: [], 5: [], 3: ['t2', 't3', 't4']}
update negber from {3: ['t2', 't3', 't4'], 4: []} to 4:['t3', 't4']
['t3', 't4']
target cannot get tracked
i am 5 g compair{5: [], 3: [], 1: [], 4: ['t3', 't4']} with {3: [], 4: [], 5: ['t3', 't4']}
i am 5 and iam in comp , here my localtree : {3: [], 4: [], 5: ['t3', 't4']}
 and here is received one : {5: [], 3: [], 1: [], 4: ['t3', 't4']}
update negber from {3: ['t2', 't3', 't4'], 4: ['t3', 't4']} to 1:['t2', 't3', 't1']
['t2', 't3', 't1']
target cannot get tracked
i am 5 g compair{1: [], 2: [], 5: [], 4: []} with {3: [], 4: [], 5: ['t3', 't4']}
i am 5 and iam in comp , here my localtree : {3: [], 4: [], 5: ['t3', 't4']}
 and here is received one : {1: [], 2: [], 5: [], 4: []}
update negber from {3: ['t2', 't3', 't4'], 4: ['t3', 't4'], 1: ['t2', 't3', 't1']} to 0:[]
  File "/usr/lib/python3.11/multiprocessing/process.py", line 314, in _bootstrap
    self.run()
  File "/usr/lib/python3.11/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/home/kk_gorbee/Documents/project/WirelessSensorTrackingSystem/./main.py", line 269, in sensor
    time.sleep(2)
KeyboardInterrupt
sender send message :  {0: [[], {}]}
Connection refused. Retrying in 1 second...
6 say here the general buffer:  {} have change ?  True
6 say my tree is :  {1: [], 2: [], 6: ['t2', 't1']}
6 send to---> 1
 6 say: i am sending :  {6: [['t2', 't1'], {1: [], 2: [], 6: ['t2', 't1']}]}
sender send message :  {6: [['t2', 't1'], {1: [], 2: [], 6: ['t2', 't1']}]}
6 send to---> 2
 6 say: i am sending :  {6: [['t2', 't1'], {1: [], 2: [], 6: ['t2', 't1']}]}
sender send message :  {6: [['t2', 't1'], {1: [], 2: [], 6: ['t2', 't1']}]}
6 say here the general buffer:  {} have change ?  False
6 say my tree is :  {1: [], 2: [], 6: ['t2', 't1']}
6 say here the general buffer:  {} have change ?  False
6 say my tree is :  {1: [], 2: [], 6: ['t2', 't1']}
6 say here the general buffer:  {} have change ?  False
6 say my tree is :  {1: [], 2: [], 6: ['t2', 't1']}
6 say here the general buffer:  {} have change ?  False
6 say my tree is :  {1: [], 2: [], 6: ['t2', 't1']}
6 say here the general buffer:  {} have change ?  False
6 say my tree is :  {1: [], 2: [], 6: ['t2', 't1']}
6 say here the general buffer:  {} have change ?  False
6 say my tree is :  {1: [], 2: [], 6: ['t2', 't1']}
6 say here the general buffer:  {} have change ?  False
6 say my tree is :  {1: [], 2: [], 6: ['t2', 't1']}
6 say here the general buffer:  {} have change ?  False
6 say my tree is :  {1: [], 2: [], 6: ['t2', 't1']}
